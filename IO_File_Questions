
When we had these two writers, what is the need of PrintWriter then?
-->PrintWriter is the most enhanced writer. It overcomes the little limitation that we had with FileWriter and BufferedWriter.
eg:: We were allowed to write char and String only with those writers, what if we write to type different type of dataType?
PrintWriter allows us to do so.

-->PrintWriter can communicate directly to file and also can communicate via any other writer.

PrintWriter pw=new PrintWriter("abc.txt");
PrintWriter pw=new PrintWriter(new FileWriter("File.txt"));

PrintWriter pw=new PrintWriter("abc.txt");
pw.write(100); //this will write 100 to file.
pw.println(100); //this will write int 100 and will separate line.
pw.println(true); //this will print boolean true and will separate line.
pw.flush();
pw.close();


Why we use flush() and close() ?
flush() is used to flush all the characters in the buffer and clear the buffer.It flushes the stream so that we can get assured that data
has written to file.
close() method is used to close the character stream and it releases system resources associated with stream.

Note that flush is applicable for all writers and close() is for all readers and writers.


How to read any file?
There are two readers to read file::
FileReader
BufferedReader

Difference between FileReader and BufferedReader?
-->FileReader reads the data from file in the forms of characters..
FileReader fr=new FileReader("abc.txt");
char[] ch=new char[int(f.length())];
fr.read(ch)

for(char ch1:ch)
{
  s.o.p(ch1);
}

With FileReader we read the file character by character,not by line.
For that we have BufferedReader.

BufferedReader allows us to read the file by char and by line too.


            Object
            |      |
            |      |
            |      | 
            |      | 
          Reader     Writer
InputStreamReader,         OutputStreamWriter,
BufferedReader              BufferedWriter,PrintWriter
 |                                   |
 |                                   | 
FileReader                           FileWriter


When to use FileOutputStream and FileWriter?
-->To write something to a file, we use FileOutputStream and FileWriter etc.
With FileOutputStream we can write byte oriented as well as character oriented data.
But note that it is always prefer to use FileWriter/PrintWriter to write character data to file.

What are the FilterOutputStream and FilterInputStream?
-->FilterOutputStream is another implementation of OutputStream.
It further hjas different implementation class: BufferedOutputStream.
DataOutputStream

Similarly, FilterInputStream have subclasses like BufferedInputStream.
DataInputStream

Which superstructure class allows reading data from an input byte stream in the form of primitive data types?
-->DataInputStream class is used to read primitive data .like readInt(), readByte(), readchar(), readDouble(),
readBoolean().
DataInputStream() can not communicate directly to files.
DataInputStream ds=new DataInputStream(new FileInputStream("File.txt"))

How BufferedOutputStream is different from BufferedWriter?
-->BufferedOutputStream is used for writing raw bytes whereas BufferedWriter is used to write characters.

BufferedWriter--Provides buffering for writer instances which makes performance faster.
BufferedOutputStream--Used for buffering Output stream.

What is the difference between InputStreamReader and BufferedReader?
-->InputStreamreader used to create a new InputStream object that can be used to read data from specified source.
It reads bytes and decodes them in characters.
BufferedReader is an abstraction that reads text from a character inout stream.It buffers characters so as to provide efficient
reading of characters and lines.

-->BufferedReads a couple of characters from specified stream and store it in a buffer.
This makes input faster.
InputStreamReader reads only one character from tyhe specified stream and remaining characters still remain in the stream.


What do you know about add-on classes?
--> add-on classes are classes which provide additional functionality eg:
BufferedOutputStream, BufferedInputStream, BufferedWriter-- buffers the stream and improve the performance.


What classes allows you to convert byte streams to characters and back?
-->OutputStreamWriter
InputStreamReader

Explain hierarchy of OutputStream and InputStream?
InputStream::
FileInputStream, ByteArrayInputStream, ObjectInputStream, FilterInputStream--DataInputStream,BufferedInputStream

OutputStream::
FileOutputStream, ByteArrayOutputStream, ObjectOutputStream, FilterOutputStream--DataOutputStream, BufferedOutputStream

























































